[env]
TARGET_TRIPLE = "wasm32-unknown-unknown"
WASM_TARGET_DIR = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${TARGET_TRIPLE}/debug/"

[tasks.install-rustup-target-wasm32]
command = "rustup"
args = ["target", "add", "wasm32-unknown-unknown"]

[tasks.build-wasm]
command = "cargo"
args = ["build", "--lib", "--target", "${TARGET_TRIPLE}"]
dependencies = ["install-rustup-target-wasm32"]

[tasks.install-wasm-bindgen]
install_crate = { crate_name = "wasm-bindgen-cli" }

[tasks.build]
command = "wasm-bindgen"
args = [
    "${WASM_TARGET_DIR}${CARGO_MAKE_CRATE_NAME}.wasm",
    "--out-dir", "../resources/static/wasm/",
    "--no-modules",
    "--no-typescript"
]
dependencies = [
    "install-wasm-bindgen",
    "format",
    "build-wasm",
]

[tasks.run]
# Run makes no sense for a library. So we overwrite it with an empty echo.
# TODO (Wybe 2022-07-10): There should be a better way.
command = "echo"
args = [""]

# TODO (Wybe 2022-07-10): Add wasm-opt: [See example from eframe](https://github.com/emilk/eframe_template/blob/9ff285409d4b73fdc575eff517ceb7059664dfe4/build_web.sh#L60)
# TODO (Wybe 2022-07-10): Add a build-release workflow.